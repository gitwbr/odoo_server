# 将所有 HTTP 请求重定向到 HTTPS
server {
    listen 80;
    server_name viewbal.com www.viewbal.com;
    return 301 https://$host/auth/;
}

# 子域名的 HTTP 重定向
server {
    listen 80;
    server_name *.viewbal.com;
    return 301 https://$host$request_uri;
}

# HTTPS 主域名服务器配置
server {
    listen 443 ssl http2;
    server_name viewbal.com www.viewbal.com;

    include /home/odoo/odoo16/odoo_nginx_port.conf;  

    # SSL 证书配置
    ssl_certificate /etc/letsencrypt/live/viewbal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/viewbal.com/privkey.pem;
    
    # SSL 配置优化
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS 配置
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # 静态文件目录
    root /home/odoo/odoo16/www/html;

    # 主域名根路径处理
    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass http://localhost:3000;
    }

    # 处理没有斜杠结尾的路径请求，自动添加斜杠
    location ~ ^/(dashboard|auth)$ {
        return 301 $scheme://$host$uri/;
    }

    # 靜態頁面處理（dashboard, auth 等）
    location ~ ^/(dashboard|auth)/ {
        try_files $uri $uri/ /$1/index.html;
    }

    # 静态文件处理
    location ~ ^/(css|js|images|assets)/ {
        try_files $uri $uri/ =404;
    }

    # API代理
    location /api/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 允许跨域
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # 为 API 请求设置更长的超时时间
        proxy_connect_timeout       300;
        proxy_send_timeout         300;
        proxy_read_timeout         300;
    }

    # 处理 Odoo 请求
    location /web {
        proxy_pass http://odoo;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Odoo Longpolling
    location /longpolling {
        proxy_pass http://odoo-im;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS 子域名服务器配置
server {
    listen 443 ssl http2;
    server_name ~^(?!www\.)(?!viewbal\.com$).+\.viewbal\.com$;

    include /home/odoo/odoo16/odoo_nginx_port.conf;

    # SSL 证书配置
    ssl_certificate /etc/letsencrypt/live/viewbal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/viewbal.com/privkey.pem;
    
    # SSL 配置优化
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # 子域名的所有请求都转发到对应端口
    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://127.0.0.1:$backend_port;
    }
}

# 定义上游服务器
upstream odoo {
    server 127.0.0.1:8001;  # web1
    server 127.0.0.1:8002;  # web2
    server 127.0.0.1:8003;  # web3
}

upstream odoo-im {
    server 127.0.0.1:9001;  # web1 longpolling
    server 127.0.0.1:9002;  # web2 longpolling
    server 127.0.0.1:9003;  # web3 longpolling
}